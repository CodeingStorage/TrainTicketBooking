火車購票系統

Entity: Java class(物件屬性) 對應資料表紀錄的映射
通常不包含商業邏輯(非硬性規定)
Entity 就是一種 POJO

1. 使用者
 userId
-----------
A88951435
F77458966
----------

2. 站點
--------------------------
 stationId  | stationName| 
	1		|	 台北		 |
	2		|	 台中		 |
	3		|	 高雄      |
--------------------------

3. 火車行徑方向
-------------------------------
 directionId  |  directionName|
 	 S		  |		南下		  |
 	 N		  |		北上 		  |
-------------------------------

3. 火車時刻表

+---------+-------------------+-----------+-----------+
| trainId |direction | Station01 | Station02 | Station02 |
+---------+-------------------+-----------+-----------+
|  1001  |    S     | 8:00    |    9:00   |   10:00   |
|  1002  |    S     | 12:00   |    13:00  |   14:00   |
|  1003  |    N     | 10:00   |    9:00   |   8;00    |
|  1004  |    N     | 14:00   |    13:00  |   12;00   |
+-------+----------+----------+-----------+-----------+

2. 車票
+--------+----------+------+------------+------------+------------------+----------------+------------+-------+----------+
| userId | trainId  | date | departTime | arriveTime | startStationName | endStationName | trainCarId | price | bookTime |
+--------+----------+------+------------+------------+------------------+----------------+------------+-------+----------+
|


4. 購物車明細檔(Detail)
+--------+----------+-----------+------------+
|
+--------+----------+-----------+------------+
|
+--------+----------+-----------+------------+

功能(API):
使用者-User:
1. 新增使用者

火車站點-station
1. 根據站點ID查找站點名稱
2. 新增站點(?
3. 根據站點ID修改站點名稱(?
4. 修改站點ID(?

火車行徑方向-direction
1. 根據行車方向ID查找行車方向
 

火車時刻表-traintable
1. 新增車次(後台)
2. 根據出發站點、抵達站點、出發日期、出發時間查找時刻表(前台)
3. 根據火車ID更新車次抵達時間(後台)
4. 根據火車ID更新車次出發時間(後台)


車票-ticket
1. 新增車票
2. 根據使用者ID與車票ID查找票卷資料
3. 根據使用者ID與車票ID修改票卷資料
4. 根據使用者ID與車票ID刪除票卷資料



資料庫
1. In-Memory
2. MySQL


Q-------------
traintable 新增站點?
ticket start/end station<-> stationId
price 獨立資料表?/單一價格