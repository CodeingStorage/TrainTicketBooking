火車購票系統

Entity: Java class(物件屬性) 對應資料表紀錄的映射
通常不包含商業邏輯(非硬性規定)
Entity 就是一種 POJO

1. 火車車次
南下
+---------+-----------+-----------+-----------+
| trainId | Station01 | Station02 | Station03 |
+---------+-----------+-----------+-----------+
|  0123   |   7:00    |   8:00    |    9:00   |
|  0456   |  11:00    |   12:00   |    13:00  |
|  0789   |  15:00    |   16:00   |    17:00  |
+---------+-----------+-----------+-----------+

北上
+---------+-----------+-----------+-----------+
| trainId | Station03 | Station02 | Station01 |
+---------+-----------+-----------+-----------+
|  1123   |   7:00    |   8:00    |    9:00   |
|  1456   |  11:00    |   12:00   |    13:00  |
|  1789   |  15:00    |   16:00   |    17:00  |
+---------+-----------+-----------+-----------+





3. 購物車主檔(Master)
+--------+----------+-----------+------------+--------------+
| cartId |  userId  | cartItems | isCheckout | checkoutTime |
+--------+----------+-----------+------------+--------------+
|  201   |   101    | [1, 2]    |    true    | /-/-/  0:0:0 |
|  202   |   102    | [3]       |    false   |              |
|  203   |   103    | [4, 5]    |    true    | /-/-/  0:0:0 |
|  204   |   103    | []        |    false   |              |
|  205   |   101    | [6]       |    true    | /-/-/  0:0:0 |
+--------+----------+-----------+------------+--------------+

4. 購物車明細檔(Detail)
+--------+----------+-----------+------------+
| itemId |  cartId  | productId |  quantity  |
+--------+----------+-----------+------------+
|   1    |   201    |    501    |     10     |
|   2    |   201    |    502    |     8      |
|   3    |   202    |    503    |     5      |
|   4    |   203    |    502    |     8      |
|   5    |   203    |    504    |     20     |
|   6    |   205    |    505    |     15     |
+--------+----------+-----------+------------+

功能(API):
使用者-User:
1. 查詢所有使用者(多筆)
2. 新增使用者
3. 修改密碼
4. 根據使用者名稱查找使用者(登入用-單筆)
5. 根據使用者ID查找使用者(單筆)

商品-Product
1. 查詢所有商品(多筆)
2. 根據產品ID來查找商品(單筆)
3. 新增商品
4. 變更商品上架狀態

購物車/購物車項目(Cart/CartItem)
1. 新增購物車資料
2. 新增購物車項目資料
3. 查詢所有購物車資料(多筆)
4. 根據購物車ID查找購物車資料(單筆)
5. 根據購物車項目ID查找購物車項目資料(單筆)
6. 根據使用者ID來查找其所有購物車資料(多筆)
7. 根據使用者ID及結帳狀態來查找其所有購物車資料
8. 根據使用者ID來查找其未結帳的購物車資料
9. 根據使用者ID將該使用者的購物車設置為已結帳狀態(前台的事件)
10. 根據購物車ID將購物車設置為已結帳狀態(後台的事件)
11. 根據購物車項目ID刪除指定的購物車項目
12. 更新購物車項目的數量

資料庫
1. In-Memory
2. MySQL